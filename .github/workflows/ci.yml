name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - test
    paths:
      - .github/workflows/ci.yml

# ref: https://github.com/hzyitc/armbian-onecloud/blob/readme/.github/workflows/ci.yml

env:
  ARMBIAN_REPO: armbian/build
  ARMBIAN_REF: master
  ARMBIAN_SHA: 33c0f0c737b6fc4372fbb6208c98e6164b1f9f4f

jobs:
  build:
    name: Build ${{ matrix.RELEASE }}-${{ matrix.BRANCH }}-${{ matrix.TYPE == 'desktop' && matrix.DESKTOP_ENVIRONMENT || matrix.TYPE }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        BRANCH:
          - edge
        RELEASE:
          - bullseye # Debian 11
        TYPE:
          - minimal
          - desktop
        exclude:
          - BRANCH: current
            TYPE: desktop
          - BRANCH: legacy
            TYPE: desktop
        include:
          - TYPE: desktop
            DESKTOP_ENVIRONMENT: xfce
            DESKTOP_ENVIRONMENT_CONFIG_NAME: config_base
            DESKTOP_APPGROUPS_SELECTED: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ env.ARMBIAN_REPO }}
          ref: ${{ env.ARMBIAN_SHA }}

      - name: Build
        run: |
          sudo ./compile.sh \
            BOARD=onecloud \
            BRANCH=${{ matrix.BRANCH }} \
            RELEASE=${{ matrix.RELEASE }} \
            KERNEL_CONFIGURE=no \
            KERNEL_ONLY=no \
            INSTALL_HEADERS=yes \
            BUILD_MINIMAL=${{ matrix.TYPE == 'minimal' && 'yes' || 'no' }} \
            BUILD_DESKTOP=${{ matrix.TYPE == 'desktop' && 'yes' || 'no' }} \
            DESKTOP_ENVIRONMENT=${{ matrix.DESKTOP_ENVIRONMENT }} \
            DESKTOP_ENVIRONMENT_CONFIG_NAME=${{ matrix.DESKTOP_ENVIRONMENT_CONFIG_NAME }} \
            DESKTOP_APPGROUPS_SELECTED=${{ matrix.DESKTOP_APPGROUPS_SELECTED }} \
            EXPERT=yes \
            USE_CCACHE=no \
            NO_APT_CACHER=yes \
            COMPRESS_OUTPUTIMAGE=img,xz,sha,gpg
          sudo chown $(id -u):$(id -g) -R output/

      - name: Clean original files
        run: |
          rm -rf output/images/*.img

      - name: Setup env
        run: |
          echo "date=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV
          
      - name: Upload data to new tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.date }}-test
          files: |
            output/images/*

      - name: Upload debs to new tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.date }}-debs-${{ matrix.RELEASE }}-${{ matrix.BRANCH }}-${{ matrix.TYPE == 'desktop' && matrix.DESKTOP_ENVIRONMENT || matrix.TYPE }}
          files: |
            output/debs/*.deb
